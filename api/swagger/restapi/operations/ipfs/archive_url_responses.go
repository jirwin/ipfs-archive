// Code generated by go-swagger; DO NOT EDIT.

package ipfs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/jirwin/ipfs-archive/api/swagger/models"
)

// ArchiveURLCreatedCode is the HTTP code returned for type ArchiveURLCreated
const ArchiveURLCreatedCode int = 201

/*ArchiveURLCreated Archive Response

swagger:response archiveUrlCreated
*/
type ArchiveURLCreated struct {

	/*
	  In: Body
	*/
	Payload *models.ArchiveResponse `json:"body,omitempty"`
}

// NewArchiveURLCreated creates ArchiveURLCreated with default headers values
func NewArchiveURLCreated() *ArchiveURLCreated {
	return &ArchiveURLCreated{}
}

// WithPayload adds the payload to the archive Url created response
func (o *ArchiveURLCreated) WithPayload(payload *models.ArchiveResponse) *ArchiveURLCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the archive Url created response
func (o *ArchiveURLCreated) SetPayload(payload *models.ArchiveResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ArchiveURLCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ArchiveURLInternalServerErrorCode is the HTTP code returned for type ArchiveURLInternalServerError
const ArchiveURLInternalServerErrorCode int = 500

/*ArchiveURLInternalServerError Archive Error

swagger:response archiveUrlInternalServerError
*/
type ArchiveURLInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewArchiveURLInternalServerError creates ArchiveURLInternalServerError with default headers values
func NewArchiveURLInternalServerError() *ArchiveURLInternalServerError {
	return &ArchiveURLInternalServerError{}
}

// WithPayload adds the payload to the archive Url internal server error response
func (o *ArchiveURLInternalServerError) WithPayload(payload *models.Error) *ArchiveURLInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the archive Url internal server error response
func (o *ArchiveURLInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ArchiveURLInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
